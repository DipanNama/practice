import base64
import string

_0xf3fda5 = string.printable

def _0x0b3c(_0xf3fda5):
	_0x2a4fa3 = ''.join(format(ord(_0xba3fcd), '08b') for _0xba3fcd in _0xf3fda5)
	_0x83af3d = []
	for _0xf4ab2d in _0x2a4fa3:
		if _0xf4ab2d == '0':
			_0x83af3d.append('.')
		else:
			_0x83af3d.append('_')
	_0x2bdc3 = ''.join(_0x83af3d)
	_0x83af3d = base64.b64encode(_0x2bdc3.encode())
	return _0x83af3d.decode()

def _0x2b51f(_0x83af3d):
	_0x2bdc3 = base64.b64decode(_0x83af3d)
	_0x83af3d = _0x2bdc3.decode()
	_0x69d2f = []
	for _0xf4ab2d in _0x83af3d:
		if _0xf4ab2d == '.':
			_0x69d2f.append('0')
		else:
			_0x69d2f.append('1')
	_0x69d2f = ''.join(_0x69d2f)
	_0xf3fda5 = ""
	for _0xba3fcd in range(0, len(_0x69d2f), 8):
		_0xaf268d = _0x69d2f[_0xba3fcd:_0xba3fcd + 8]
		_0xd32ac5 = int(_0xaf268d, 2)
		_0xf3fda5 += chr(_0xd32ac5)
	return ''.join(_0xf3fda5)

_0x83af3d = _0x0b3c(_0xf3fda5)
_0x93fa4d = _0x2b51f(_0x83af3d)

print(_0x83af3d)